#!/usr/bin/env ruby

def validate_hostname!(hostname)
  return if hostname
  usage
  $stderr.puts 'Please provide the hostname to import to.'
  exit(1)
end

def validate_csv_file!(csv_file)
  return if csv_file && File.exist?(csv_file)
  usage
  $stderr.puts 'Please provide a metadata file to import.'
  exit(1)
end

def validate_files_directory!(files_directory)
  return if files_directory
  $stderr.puts 'Files directory was left blank. No files will be ingested'
end

def validate_depth!(depth)
  return 0 if depth == false || depth == "0" || depth.to_i != 0
  return depth.to_i if depth == "0"
  return depth.to_i if depth.to_i != 0
  $stderr.puts 'Depth must be a number. No files will be ingested'
end

def load_rails
  puts 'Loading environment...'
  require File.expand_path('../../config/environment', __FILE__)
  require 'importer'
  puts 'Starting import...'
end

def main(hostname, csv_file, files_directory, depth)
  validate_hostname!(hostname)
  validate_csv_file!(csv_file)
  validate_files_directory!(files_directory)
  validate_depth!(depth)
  load_rails

  AccountElevator.switch!(hostname)
  size = Importer::DirectoryFilesImporter.new(csv_file, files_directory, depth).import_all

  puts "Imported #{size} records."
end

def usage
  $stderr.puts "Usage: #{$PROGRAM_NAME} <hostname> <csv file> <files directory>"
end

main(ARGV[0], ARGV[1], ARGV[2], ARGV[3])
